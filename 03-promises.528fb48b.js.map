{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,QAEtCF,EAAOG,iBAAiB,UAQxB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMC,EAAaC,OAAOC,EAASC,OAC7BC,EAAYH,OAAOC,EAASG,MAC5BC,EAASL,OAAOC,EAASI,QAE/B,GAAIN,EAAa,GAAKI,EAAY,GAAKE,EAAS,EAI9C,OAHAC,EAAAf,GAASgB,OAAOC,QAAQ,8BACxBX,EAAEY,cAAcC,aAChBT,EAAW,IAIb,IACE,IAAIU,EAAQZ,EAAYa,EAAW,EACnCA,GAAYP,EACZM,GAASR,EAAWS,GAAY,EAEhCC,EAAcD,EAAUD,GACrBG,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUd,EAAKa,EAALb,MACjBI,EAAAf,GAASgB,OAAOU,QACd,uBAAwCC,OAAfF,EAAS,QAAYE,OAANhB,EAAM,UAGjDiB,OAAM,SAAAJ,G,IAAGC,EAAQD,EAARC,SAAUd,EAAKa,EAALb,MAClBI,EAAAf,GAASgB,OAAOC,QACd,sBAAqCU,OAAfF,EAAS,QAAYE,OAANhB,EAAM,UAKnDL,EAAEY,cAAcC,QAChBT,EAAW,MAxCbR,EAAOG,iBAAiB,SAGxB,SAAqBC,GACnBI,EAASJ,EAAEuB,OAAOC,MAAQxB,EAAEuB,OAAOE,SAHrC,IAAIrB,EAAW,GA0Cf,SAASY,EAAcG,EAAUd,GAC/B,OAAO,IAAIqB,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EAEFF,EAAQ,CACNR,WACAd,UAIFuB,EAAO,CACLT,WACAd,YAGHA,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('form');\n\nformEl.addEventListener('submit', onFormSubmit);\nformEl.addEventListener('input', onFormInput);\nlet formData = {};\n\nfunction onFormInput(e) {\n  formData[e.target.name] = e.target.value;\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const firstDelay = Number(formData.delay);\n  const stepDelay = Number(formData.step);\n  const amount = Number(formData.amount);\n\n  if (firstDelay < 0 || stepDelay < 0 || amount < 0) {\n    Notiflix.Notify.failure('Please, enter correct data');\n    e.currentTarget.reset();\n    formData = {};\n    return;\n  }\n\n  for (\n    let delay = firstDelay, position = 1;\n    position <= amount;\n    delay += stepDelay, position += 1\n  ) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n\n  e.currentTarget.reset();\n  formData = {};\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({\n          position,\n          delay\n        });\n      } else {\n        // Reject\n        reject({\n          position,\n          delay\n        });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","addEventListener","e","preventDefault","firstDelay","Number","$ce04d3a99e08e73b$var$formData","delay","stepDelay","step","amount","$parcel$interopDefault","Notify","failure","currentTarget","reset","delay1","position1","$ce04d3a99e08e73b$var$createPromise","then","param","position","success","concat","catch","target","name","value","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.528fb48b.js.map"}